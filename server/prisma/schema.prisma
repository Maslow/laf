// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  username   String   @unique
  email      String   @unique
  phone      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile UserProfile?
}

model UserProfile {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  uid        String   @unique @db.ObjectId
  openid     String?
  from       String?
  avatar     String?
  name       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [uid], references: [id])
}

model Region {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String        @unique
  desc        String?
  applications Application[]
}

model Bundle {
  id                     String        @id @default(auto()) @map("_id") @db.ObjectId
  name                   String        @unique
  displayName            String
  limitCPU               Int
  limitMemory            Int
  databaseCapacity       Int
  storageCapacity        Int
  networkTrafficOutbound Int
  networkTrafficInbound  Int?
  priority               Int
  applications            Application[]
}

type RuntimeImageGroup {
  main    String
  init    String?
  sidecar String?
}

model Runtime {
  id           String            @id @default(auto()) @map("_id") @db.ObjectId
  name         String            @unique
  type         String
  image        RuntimeImageGroup
  version      String
  latest       Boolean
  Applications Application[]
}

model Application {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  appid       String   @unique
  regionName  String
  bundleName  String
  runtimeName String
  tags        String[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  createdBy  String   @db.ObjectId

  region  Region  @relation(fields: [regionName], references: [name])
  runtime Runtime @relation(fields: [runtimeName], references: [name])
  bundle  Bundle  @relation(fields: [bundleName], references: [name])
}

enum HttpMethod {
  GET
  POST
  PUT
  DELETE
  PATCH
  HEAD
}

type CloudFunctionSource {
  code    String
  uri     String?
  version Int     @default(0)
  hash    String?
  lang    String?
}

model CloudFunction {
  id         String              @id @default(auto()) @map("_id") @db.ObjectId
  appid      String
  name       String
  source     CloudFunctionSource
  desc       String
  tags       String[]
  websocket  Boolean
  methods    HttpMethod[]
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  createdBy String              @db.ObjectId

  @@unique([appid, name])
}
